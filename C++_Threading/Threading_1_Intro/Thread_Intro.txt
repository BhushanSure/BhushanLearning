QUESTIONS
1. What do you understand by thread and give one example in C++?

ANSWER
0. In every application there is a default thread which is main(), in side this we create other threads.
1. A thread is also known as lightweight process. Idea is achieve parallelism by dividing a process into multiple threads. 
   For example:
   (a) The browser has multiple tabs that can be different threads. 
   (b) MS Word must be using multiple threads, one thread to format the text, another thread to process inputs (spell checker)
   (c) Visual Studio code editor would be using threading for auto completing the code. (Intellicence)

WAYS TO CREATE THREADS IN C++11
1. Function Pointers
2. Lambda Functions
3. Functors
4. Member Functions
5. Static Member functions

Note:-
        1) Threads always take callable object in parameter to run.
           Refer std::thread t1 and std::thread t2 parameter in Code.
        2) t1.join and t2.join is important because it joins user created
           thread to the main thread. If we don't join it to main thread
           and if main thread get's executed completely first but user created
           thread is still running then we will not be able to get the result
           of user created thread. So join user created thread to main thread.
           it insures that main thread don't get completed until user created thread
           get's finished. main thread will wait until t1.join gets executed. it will
           not move to next instruction in main function.
        3) In this example, we have created threads using function pointers.

